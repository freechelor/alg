I have been working as an software engineer for about 18 years.

I've worked for several business domains such as location service, cloud printing, private app store service, home network system, a kind of IoT service, equipment(router, switch, etc.) monitoring system.	// is this good approach to list every thing that I have experienced

For most of times in my career, I used Java, even though now I'm working with C# on .NET Framework and I worked as a back-end software engineer.
I used RDBMS for most of projects that I was involved in, but I'm interested in MongoDB and ElasticSearch, so I gave it a shot(Can I put this in, or is it better to just remove out, or do I need some small projects to apply them to).
And I had chances to work on IaaS such as AWS and Azure for some of projects.

I'm very interested in Big Data, even though I hardly have had chances to work in that kind of fields.
Because when I did cell tower projects, I collected a lot of data from Samsung smart phones out there to calculate cell tower location.
blabla~

And, I'm also interested in IoT service. Actually, I worked for home network service for a long time and long time ago.
In the service, basically, I developed the server that routed packet among devices. For example, it sent control messages from wall pad by users to devices such as gateway or neighbor's wall pad or relay message from the entrance of apartments to wall pad.
and users could control light bulb, gas valve, curtains on windows.
However, we didn't make it, because bla bla~


Currently what I'm doing 

THERE MUST BE CORE about WHAT EXPERTISE I HAVE. chronically, story,

SUMMARY
MAKE THEM UNDERSTAND WHO I AM IN TECHNICAL VIEW
-SPECIALTY
-EXPERTISE

EXPERIENCE
[TVIEW]
- why?
we were providing video surveillance service streaming live and recorded videos. 
so, it was using a lot of storage space to save all of the user videos with reliabilty.
we were storing 1 original and 1 copy videos.
we decided introducing distributed file system, DFS through proof of concept, which could reduce storage consumption to 70%.
we had to change our system structure to make the most use of DFS.
I led the project,

- what?
- how?
- result
- lessons learned

[CELL TOWER]
- why?
- what?
- how?
- result
- lessons learned

[CLOUD PRINTING]
- why?
- what?
- how?
- result
- lessons learned

[HOMEVITA]
- why?
- what?
- how?
- result
- lessons learned

SP/WP
- HOW TO MAKE EFFORTS TO IMPROVE WP
-> good strategy : hold back when I talk to senior, --> so I try to make a presentation or sessions to share ideas
e.g. I suggested that we'd better make some documents because workflows are so complicated and nobody seems to understand entire stories . But, they're not willing to do that. However, I couldn't insist that any more. So, I made some setup using atlassian confluence and demonstrate some features to show how easy and convenient it will be in the end.


=== merge ==
I have been working as an software engineer for about 18 years.

I've worked for several business domains such as location service, cloud printing, private app store service, home network system, a kind of IoT service, equipment(router, switch, etc.) monitoring system.    // is this good approach to list every thing that I have experienced

For most of times in my career, I used Java, even though now I'm working with C# on .NET Framework and I worked as a back-end software engineer.
I used RDBMS for most of projects that I was involved in, but I'm interested in MongoDB and ElasticSearch, so I gave it a shot(Can I put this in, or is it better to just remove out, or do I need some small projects to apply them to).
And I had chances to work on IaaS such as AWS and Azure for some of projects.

I'm very interested in Big Data, even though I hardly have had chances to work in that kind of fields.
Because when I did cell tower projects, I collected a lot of data from Samsung smart phones out there to calculate cell tower location.
blabla~

And, I'm also interested in IoT service. Actually, I worked for home network service for a long time and long time ago.
In the service, basically, I developed the server that routed packet among devices. For example, it sent control messages from wall pad by users to devices such as gateway or neighbor's wall pad or relay message from the entrance of apartments to wall pad.
and users could control light bulb, gas valve, curtains on windows.
However, we didn't make it, because bla bla~


I am interested in designing architecture for a large-scale system and developing software.
Because I have experience when I worked on Cell tower project which collects a lot of signal data from Samsung mobile phones and I also worked on a kind of IoT service, let say, Homevita service, Tview Service, which collects sensor data.
I recognized that it is essential to handle a pretty big bunch of data easily and fast for providing users with nice quality service. The faster and more flexible we can handle them, the better and better quality service we could provide, and actually we can make likely impossible service work.

I have experience that 

@@@@@@@@@@@@@@@@@
@TODO : from experiences, what you learned, what you achieved, what was big challenge, how to overcome those challenges
From my experience, I've learned what to consider, how to prioritize according to requirements

Let's assume we're creating video surveliance system.
Probably, requirements would look like this.
first, when there's intrusion, users have to be notified with alert.
second, after there happen any problems, users can check recorded videos at the moment.
last, users can see video clips of any time in any days whenever they want to.
In this case, priority would likely be as listed above.
And we can think that has 3 main parts in functions, one is streaming video smoothly from client side device to servers, and the other is analyzing video to decide there's an intrusion or not.  the last one is storing video streaming.

blabla~~

Tview Service : 
[learned/achieved]
@TODO : IT SHOULD BE LESSONS LEARNED, NOT A SCHOOL THING
I learned how Distributes File System(DFS/GlusterFS) works and how application has to interact with DFS to make the most out of it. And, finally, I could reduce the cost of storage by approximately 20% by applying DFS and re-designing existing system architecture to it and we got the more flexible system than before.

[challenges/how to overcome]
** challenges **
- I had no idea about DFS.
- To top it off, I didn't know even how whole system is working and interacting with each other in detail. There were several applications in regards.
- As always, I don't have enough time for it.

** overcome **
First, I am focusing on how DFS works and under which conditions we can get cost reduction maximized.
Second, focusing on minimizing affect by DFS.
And, I identified which parts would be affected when applying DFS.
e.g. the application receiving video stream has to change its inteface endpoint to point to DFS and make a longer buffering andflushing a larger file to decrease the number of writing transactions. 
Then, I came up with some possible design ideas and discussed them with each developer to get proper conclusions.
And then, make the concrete time table including integration test, aging test, and transition plan.


It's kind of a little bit long story, but if you're ok. I'll give it a try.

CellTower Service : 
[learned/achieved]
I learned how to utilize given resource efficiently, and blabla~~~
Finally, I could launch service which collects data from about 30M smart phones and provice cell locations when it is asked.


[challenges/how to overcome]
** challenges **
Similar to Tview service case, I had no idea about cell tower thing such as signal strength, travel time, let say timing advance.
At first, just following algorithm given couldn't produce tower locations in time. I mean, it's on a daily basis.
It's up to other team to create effective and correct algorithms for calculating cell tower locations.
** overcome **
But, its performance was not satisfactory, so, I came up with a idea to reduce calculation time significantly by introducing a kind of 
new component.
The reason why performance was way slower not to meet requirement, let say, daily update, is we had so many points to gathere to calculate a cell tower location. If we received signals from a specific cell tower 100K times, we had to retrieve all of them from DB.
So, I introduced a component to cover a part of range of the patch and made it represent the signal information received as if a single point somewhere in the grid has a single signal information.
Actually, it was just smaller partition of a bigger one called patch, which has 0.1 radius degree in both latitute and longitude.
But, by using the concept, we can put limitation on the number of places collecting signals from cell towers and that makes calculation time predictable and we could make it in time.


As you can see in the above cases, I learned if you define and identify problems exact, you could find solution in the end.
Of course, there would be following issues to decide about how many resources to pour in.

sample English sentence just for reference : We can reduce the problem to two main issues








@@@@@@@@@@@@@@@@@@@@
@TODO: to be ready to Go Deeper about the projects when you're asked to do
